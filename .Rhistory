(1|region),
data = Data,
family = binomial()
)
## summary of model
summary(model)
model <- rpart::rpart(formula = vote_solidity_factor ~
ageC + educ + income + factor(region) +
proj_CAQ + proj_PLQ + proj_QS + proj_PQ + proj_PCQ,
data = Data)
rpart.plot::rpart.plot(model)
summary(model)
model <- rpart::rpart(formula = vote_solidity_3levels ~
ageC + educ + income + factor(region) +
proj_CAQ + proj_PLQ + proj_QS + proj_PQ + proj_PCQ,
data = Data)
summary(model)
rpart.plot::rpart.plot(model) ## 0.1 or 1?
rpart.plot::rpart.plot(model) ## 0.1 or 1?
model <- rpart::rpart(formula = vote_solidity_3levels ~
ageC + educ + income + factor(region) +
proj_CAQ + proj_PLQ + proj_QS + proj_PQ + proj_PCQ,
data = Data)
summary(model)
rpart.plot::rpart.plot(model) ## 0.1 or 1?
rpart.plot::rpart.plot(model, box.palette = "blue") ## 0.1 or 1?
model <- rpart::rpart(formula = vote_solidity_3levels ~
ageC + educ + income + factor(region),
data = Data)
summary(model)
rpart.plot::rpart.plot(model) ## 0.1 or 1?
rpart.plot::rpart.plot(model, box.palette = "blue") ## 0.1 or 1?
model <- rpart::rpart(formula = vote_solidity_3levels ~
ageC + educ + income + factor(region) +
proj_CAQ + proj_PLQ + proj_QS + proj_PQ + proj_PCQ,
data = Data)
summary(model)
rpart.plot::rpart.plot(model, box.palette = "blue") ## 0.1 or 1?
model <- rpart::rpart(formula = vote_solidity ~
ageC + educ + income + factor(region) +
proj_CAQ + proj_PLQ + proj_QS + proj_PQ + proj_PCQ,
data = Data)
summary(model)
rpart.plot::rpart.plot(model) ## 0.1 or 1?
summary(model)
pred <- predict(model, Data)
table(pred)
model <- rpart::rpart(formula = fragile ~
ageC + educ + income + factor(region) +
proj_CAQ + proj_PLQ + proj_QS + proj_PQ + proj_PCQ,
data = Data)
summary(model)
rpart.plot::rpart.plot(model) ## 0.35 or 0.47?
pred <- predict(model, Data)
table(pred) ## only two possible values?
## Distribution of model response among solid (0) and fragile (1) voters
ggplot(Data, aes(x = pred)) +
geom_histogram() +
facet_wrap(~fragile)
model <- rpart::rpart(formula = fragile1 ~
ageC + educ + income + factor(region) +
proj_CAQ + proj_PLQ + proj_QS + proj_PQ + proj_PCQ,
data = Data)
summary(model)
rpart.plot::rpart.plot(model) ## 0.35 or 0.47?
pred <- predict(model, Data)
table(pred) ## only two possible values?
## Distribution of model response among solid (0) and fragile (1) voters
ggplot(Data, aes(x = pred)) +
geom_histogram() +
facet_wrap(~fragile)
install.packages("beepr")
beepr::beep(4)
beepr::beep(4)
beepr::beep(4)
beepr::beep(1)
beepr::beep(2)
beepr::beep(3)
beepr::beep(5)
beepr::beep(6)
?beep
beepr::beep(4)
beepr::beep(7)
beepr::beep(8)
beepr::beep(9)
beepr::beep(10)
beepr::beep(11)
?beep_on_error
beepr::beep(10)
beepr::beep(10)
beepr::beep(10)
beepr::beep(10)
beepr::beep(10)
beepr::beep(10)
beepr::beep(10)
beepr::beep(10)
beepr::beep(10)
beepr::beep(10)
beepr::beep(10)
beepr::beep(10)
beepr::beep(10)
beepr::beep(10)
beepr::beep(10)
beepr::beep(10)
beepr::beep(10)
beepr::beep(10)
beepr::beep(10)
post_strat <- readRDS("mrp/data/post_strat_table.rds")
census <- readRDS("mrp/data/census_data.rds") ## for region of riding
regions <- census$region
names(regions) <- census$riding_id
post_strat$region <- regions[as.character(post_strat$riding_id)]
View(post_strat)
Data <- readRDS("mrp/data/real_survey_data_with_riding_projections.rds")
View(Data)
model <- lm(vote_solidity ~
ageC * educ * income +
proj_CAQ*proj_PCQ*proj_QS*proj_PQ*proj_PLQ,
data=Data)
summary(model)
### lm 5 (step with interactions) --------------------------------------------------------------------
model <- lm(vote_solidity ~
ageC * educ + income * factor(region) +
proj_CAQ*proj_PCQ*proj_QS*proj_PQ*proj_PLQ,
data=Data)
summary(model) ## adj r2 of 0.05, not good
model2 <- step(model)
# Data --------------------------------------------------------------------
Data <- readRDS("mrp/data/real_survey_data_with_riding_projections.rds") %>%
## removing observations with NA in the following columns
drop_na(region, ageC, educ, income, vote_solidity, starts_with("proj"))
# Packages and functions ----------------------------------------------------------------
library(tidyverse)
# Data --------------------------------------------------------------------
Data <- readRDS("mrp/data/real_survey_data_with_riding_projections.rds") %>%
## removing observations with NA in the following columns
drop_na(region, ageC, educ, income, vote_solidity, starts_with("proj"))
### lm 5 (step with interactions) --------------------------------------------------------------------
model <- lm(vote_solidity ~
ageC * educ + income * factor(region) +
proj_CAQ*proj_PCQ*proj_QS*proj_PQ*proj_PLQ,
data=Data)
model2 <- step(model)
summary(model2) ## adj r2 of 0.05
model <- lm(vote_solidity ~
ageC * educ + income +
proj_CAQ*proj_PCQ*proj_QS*proj_PQ*proj_PLQ,
data=Data)
summary(model)
### lm 5 (step with interactions) --------------------------------------------------------------------
model <- lm(vote_solidity ~
ageC * educ * income * factor(region) +
proj_CAQ*proj_PCQ*proj_QS*proj_PQ*proj_PLQ,
data=Data)
summary(model) ## adj r2 of 0.05, not good
model2 <- step(model)
summary(model2) ## adj r2 of 0.05
model <- lm(vote_solidity ~
ageC * educ + income +
proj_CAQ*proj_PCQ*proj_QS*proj_PQ*proj_PLQ,
data=Data)
summary(model)
Data <- readRDS("mrp/data/real_survey_data_with_riding_projections.rds") ## for model
model <- lm(vote_solidity ~
ageC * educ + income +
proj_CAQ*proj_PCQ*proj_QS*proj_PQ*proj_PLQ,
data=Data)
summary(model)
# Data --------------------------------------------------------------------
post_strat <- readRDS("mrp/data/post_strat_table.rds")
View(post_strat)
post_strat <- readRDS("mrp/data/post_strat_table.rds")
# Packages ----------------------------------------------------------------
library(tidyverse)
# Data --------------------------------------------------------------------
## Survey data
Data <- readRDS("mrp/data/real_survey_data.rds") %>%
ungroup() %>%
#### Only select independent variables
select(ageC, educ, income)
## Census data
Census <- readRDS("mrp/data/census_data.rds") %>%
## remove province line
filter(riding_name != "Province")
## Projections data
Projections <- readRDS("data/table2_duringCampaign.rds") %>%
filter(date == min(date) & ## Only keep the first date
party != "PVQ") ## remove PVQ (green party)
# Generate synthetic strat table ------------------------------------------
for (i in 1:nrow(Census)) {
options(dplyr.summarise.inform = FALSE)
options(dplyr.left_join.inform = FALSE)
riding_idi <- Census$riding_id[i]
prop_age15p <- 1 - Census$age0m14[i]
censusPropsAge <- c(Census$age15m29[i], Census$age30m44[i],
Census$age45m59[i], Census$age60m74[i],
Census$age75p[i])/prop_age15p
censusPropsEduc <- c(Census$educHSB[i],
Census$educColl[i],
Census$educUniv[i])
censusPropsIncome <- c("incomeLow" = Census$income40m[i],
"incomeMid" = Census$income40m99[i],
"incomeHigh" = Census$income100p[i])
FirstStrat <- Data %>%
select(ageC, educ) %>%
na.omit() %>%
group_by(ageC, educ) %>%
summarise(n = n()) %>%
ungroup() %>%
mutate(prct = n / sum(n)) %>%
group_by(educ) %>%
mutate(prct = sum(prct))
FirstStrat$adjustCoef <- censusPropsEduc/FirstStrat$prct
FirstStrat$newFreq <- round(FirstStrat$n*FirstStrat$adjustCoef)
FirstStrat <- FirstStrat %>%
ungroup() %>%
select(ageC,educ,newFreq) %>%
rename(n=newFreq) %>%
mutate(prct=n / sum(n))
LastStage <- FirstStrat
Strat <- Data %>%
select(ageC, educ, income) %>%
na.omit() %>%
group_by(ageC, educ, income) %>%
summarise(n = n()) %>%
ungroup() %>%
mutate(prct = n / sum(n))
vars <- c("ageC", "educ", "income")
args <- paste0("unique(Strat$", vars, ")", collapse = ", ")
AllCombs <-
eval(parse(text = paste0("expand.grid(", args, ")")))
names(AllCombs) <- vars
Strat <- left_join(AllCombs, Strat) %>%
replace(is.na(.), 0) %>%
group_by(educ, income) %>%
mutate(prct2 = sum(prct))
Strat$adjustCoef <- censusPropsIncome[Strat$income]/Strat$prct2
Strat$adjustCoef <-
ifelse(Strat$adjustCoef %in% c(-Inf, Inf), 0, Strat$adjustCoef)
Strat$newFreq <- Strat$n * Strat$adjustCoef
Strat <- Strat %>%
select(all_of(vars), newFreq) %>%
rename(n = newFreq) %>%
group_by(ageC, educ) %>%
mutate(prct = (n / sum(n)))
LastStagej <- LastStage %>%
select(-n) %>%
rename(prct_ls = prct)
Strat2 <- left_join(Strat, LastStagej) %>%
mutate(prct = prct * prct_ls)
LastStage <- Strat2 %>%
select(-prct_ls)
if (i == 1) {
StratTable <- LastStage %>%
mutate(riding_id = riding_idi)
}
else {
TempStrat <- LastStage %>%
mutate(riding_id = riding_idi)
StratTable <- rbind(StratTable, TempStrat)
}
print(paste0(round(i / nrow(Census) * 100), "% - ", riding_idi))
}
### Check
StratTable$n[is.nan(StratTable$n)] <- 0
StratTable$prct[is.nan(StratTable$prct)] <- 0
# Test
StratTable %>%
group_by(riding_id) %>%
summarise(sum = sum(prct)) %>%
arrange(-sum)
#### Every riding has a sum of 1? Good!!
# Merge riding projections at start of campaign ---------------------------
Final <- Projections %>%
## Selecting relevant columns
select(riding_id, party, pred) %>%
## Pivoting the df on the wide format
pivot_wider(., names_from = party,
values_from = pred,
names_prefix = "proj_") %>%
## Joining with Data
left_join(StratTable, ., by = "riding_id")
View(Final)
names(Final)
# Merge riding projections at start of campaign ---------------------------
Final <- Projections %>%
## Selecting relevant columns
select(riding_id, party, pred) %>%
## Pivoting the df on the wide format
pivot_wider(., names_from = party,
values_from = pred,
names_prefix = "proj_") %>%
## Joining with Data
left_join(StratTable, ., by = "riding_id") %>%
## order the columns
select(riding_id, ageC, educ, income, n, riding_prop = prct,
starts_with("proj"))
## Save it
saveRDS(Final, "mrp/data/post_strat_table.rds")
## post strat table
post_strat <- readRDS("mrp/data/post_strat_table.rds")
# Packages and functions ----------------------------------------------------------------
library(tidyverse)
## survey data for model
Data <- readRDS("mrp/data/real_survey_data_with_riding_projections.rds")
## post strat table
post_strat <- readRDS("mrp/data/post_strat_table.rds")
model <- lm(vote_solidity ~
ageC * educ + income +
proj_CAQ*proj_PCQ*proj_QS*proj_PQ*proj_PLQ,
data=Data)
summary(model)
hist(model$residuals)
post_strat$pred <- predict(model, newdata = post_strat)
hist(post_strat$pred)
View(post_strat)
post_strat <- readRDS("mrp/data/post_strat_table.rds")
census <- readRDS("mrp/data/census_data.rds") ## for region of riding
regions <- census$region
names(regions) <- census$riding_id
post_strat$region <- regions[as.character(post_strat$riding_id)]
post_strat$pred <- predict(model, newdata = post_strat)
# Packages ----------------------------------------------------------------
library(tidyverse)
# Data --------------------------------------------------------------------
## Survey data
Data <- readRDS("mrp/data/real_survey_data.rds") %>%
ungroup() %>%
#### Only select independent variables
select(ageC, educ, income)
## Census data
Census <- readRDS("mrp/data/census_data.rds") %>%
## remove province line
filter(riding_name != "Province")
## Projections data
Projections <- readRDS("data/table2_duringCampaign.rds") %>%
filter(date == min(date) & ## Only keep the first date
party != "PVQ") ## remove PVQ (green party)
# Generate synthetic strat table ------------------------------------------
for (i in 1:nrow(Census)) {
options(dplyr.summarise.inform = FALSE)
options(dplyr.left_join.inform = FALSE)
riding_idi <- Census$riding_id[i]
prop_age15p <- 1 - Census$age0m14[i]
censusPropsAge <- c(Census$age15m29[i], Census$age30m44[i],
Census$age45m59[i], Census$age60m74[i],
Census$age75p[i])/prop_age15p
censusPropsEduc <- c(Census$educHSB[i],
Census$educColl[i],
Census$educUniv[i])
censusPropsIncome <- c("incomeLow" = Census$income40m[i],
"incomeMid" = Census$income40m99[i],
"incomeHigh" = Census$income100p[i])
FirstStrat <- Data %>%
select(ageC, educ) %>%
na.omit() %>%
group_by(ageC, educ) %>%
summarise(n = n()) %>%
ungroup() %>%
mutate(prct = n / sum(n)) %>%
group_by(educ) %>%
mutate(prct = sum(prct))
FirstStrat$adjustCoef <- censusPropsEduc/FirstStrat$prct
FirstStrat$newFreq <- round(FirstStrat$n*FirstStrat$adjustCoef)
FirstStrat <- FirstStrat %>%
ungroup() %>%
select(ageC,educ,newFreq) %>%
rename(n=newFreq) %>%
mutate(prct=n / sum(n))
LastStage <- FirstStrat
Strat <- Data %>%
select(ageC, educ, income) %>%
na.omit() %>%
group_by(ageC, educ, income) %>%
summarise(n = n()) %>%
ungroup() %>%
mutate(prct = n / sum(n))
vars <- c("ageC", "educ", "income")
args <- paste0("unique(Strat$", vars, ")", collapse = ", ")
AllCombs <-
eval(parse(text = paste0("expand.grid(", args, ")")))
names(AllCombs) <- vars
Strat <- left_join(AllCombs, Strat) %>%
replace(is.na(.), 0) %>%
group_by(educ, income) %>%
mutate(prct2 = sum(prct))
Strat$adjustCoef <- censusPropsIncome[Strat$income]/Strat$prct2
Strat$adjustCoef <-
ifelse(Strat$adjustCoef %in% c(-Inf, Inf), 0, Strat$adjustCoef)
Strat$newFreq <- Strat$n * Strat$adjustCoef
Strat <- Strat %>%
select(all_of(vars), newFreq) %>%
rename(n = newFreq) %>%
group_by(ageC, educ) %>%
mutate(prct = (n / sum(n)))
LastStagej <- LastStage %>%
select(-n) %>%
rename(prct_ls = prct)
Strat2 <- left_join(Strat, LastStagej) %>%
mutate(prct = prct * prct_ls)
LastStage <- Strat2 %>%
select(-prct_ls)
if (i == 1) {
StratTable <- LastStage %>%
mutate(riding_id = riding_idi)
}
else {
TempStrat <- LastStage %>%
mutate(riding_id = riding_idi)
StratTable <- rbind(StratTable, TempStrat)
}
print(paste0(round(i / nrow(Census) * 100), "% - ", riding_idi))
}
### Check
StratTable$n[is.nan(StratTable$n)] <- 0
StratTable$prct[is.nan(StratTable$prct)] <- 0
# Test
StratTable %>%
group_by(riding_id) %>%
summarise(sum = sum(prct)) %>%
arrange(-sum)
#### Every riding has a sum of 1? Good!!
regions <- Censuis$region
regions <- Census$region
names(regions) <- Census$riding_id
StratTable$region <- regions[as.character(StratTable$riding_id)]
riding_name <- Census$riding_name
riding_names <- Census$riding_name
names(riding_names) <- Census$riding_id
riding_names <- Census$riding_name
names(riding_names) <- Census$riding_id
StratTable$riding_name <- riding_names[as.character(StratTable$riding_id)]
View(StratTable)
# Merge riding projections at start of campaign ---------------------------
Final <- Projections %>%
## Selecting relevant columns
select(riding_id, party, pred) %>%
## Pivoting the df on the wide format
pivot_wider(., names_from = party,
values_from = pred,
names_prefix = "proj_") %>%
## Joining with Data
left_join(StratTable, ., by = "riding_id") %>%
## order the columns
select(riding_id, riding_name, region, ageC, educ, income, n, riding_prop = prct,
starts_with("proj"))
View(Final)
## Save it
saveRDS(Final, "mrp/data/post_strat_table.rds")
# Packages and functions ----------------------------------------------------------------
library(tidyverse)
## survey data for model
Data <- readRDS("mrp/data/real_survey_data_with_riding_projections.rds")
## post strat table
post_strat <- readRDS("mrp/data/post_strat_table.rds")
## post strat table
post_strat <- readRDS("mrp/data/post_strat_table.rds")
model <- lm(vote_solidity ~
ageC * educ + income +
proj_CAQ*proj_PCQ*proj_QS*proj_PQ*proj_PLQ,
data=Data)
summary(model)
post_strat$pred <- predict(model, newdata = post_strat)
hist(post_strat$pred)
View(post_strat)
Aggregated <- post_strat %>%
group_by(riding_id) %>%
summarise(mean_vote_solidity = weighted.mean(x = pred, w = riding_prop))
View(Aggregated)
Aggregated <- post_strat %>%
group_by(riding_id, riding_name) %>%
summarise(mean_vote_solidity = weighted.mean(x = pred, w = riding_prop))
library(tidyverse) ## for data wrangling and ggplot
library(ggridges) ## for embedding density ridges
library(envalysis) ## for the `theme_publish()` function
library(ggtext) ## for the element_markdown() function (in the graph)
Data <- readRDS("data/table3_agregatedData.rds")
View(Data)
names(Data)
str(Data)
View(Data)
test <- Data %>%
select(riding_id, fragility_index) %>%
left_join(Aggregated, ., by = "riding_id")
View(test)
test <- Data %>%
select(riding_id, fragility_index) %>%
left_join(Aggregated, ., by = "riding_id") %>%
mutate(mean_vote_solidity = scale(mean_vote_solidity)[,1])
test <- Data %>%
select(riding_id, fragility_index) %>%
left_join(Aggregated, ., by = "riding_id") %>%
mutate(mean_vote_solidity = scale(mean_vote_solidity)[1,])
scale(Aggregated$mean_vote_solidity)
scale(Aggregated$mean_vote_solidity)[,1]
test <- Data %>%
select(riding_id, fragility_index) %>%
left_join(Aggregated, ., by = "riding_id") %>%
mutate(mean_vote_solidity = scale(mean_vote_solidity)[,1])
test$mean_vote_solidity <- scale(test$mean_vote_solidity)[,1]
test <- Data %>%
select(riding_id, fragility_index) %>%
left_join(Aggregated, ., by = "riding_id")
test$mean_vote_solidity <- scale(test$mean_vote_solidity)[,1]
test <- Data %>%
select(riding_id, fragility_index) %>%
left_join(Aggregated, ., by = "riding_id")
test$mean_vote_solidity <- scale(test$mean_vote_solidity)[,1]
test$fragility_index <- scale(test$fragility_index)[,1]
ggplot(test, aes(x = fragility_index, y = mean_vote_solidity)) +
geom_jitter(alpha = 0.5) +
geom_smooth()
