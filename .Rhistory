xlab("RCI of leading party") +
scale_x_continuous(breaks = breaks_x*10) +
scale_y_continuous(expand = c(0,0),
breaks = c(1,25,50,75,99),
labels = c(0,25,50,75,100),
limits = c(0, 107)) +
scale_alpha_continuous(range = c(0.55,1),
guide = "none") +
scale_linewidth_continuous(range = c(0.65,1.75), guide = "none") +
scale_linetype_manual(name = "",
values = c("all" = "solid",
"CAQ" = "dashed",
"PLQ" = "dotdash",
"QS" =  "dotted",
"PQ" =  "longdash",
"PCQ" = "twodash"),
labels = c("all" = "All parties",
"CAQ" = "CAQ",
"PLQ" = "QLP",
"QS" = "QS",
"PQ" = "PQ",
"PCQ" = "PCQ")) +
envalysis::theme_publish() +
theme(axis.ticks = element_blank(),
plot.background = element_rect(fill = "white"),
panel.background = element_rect(fill = "white"))
ggsave("graphs/figure2_prob_voteInt.png",
width = 8, height = 4.5)
ggplot(Graph, aes(x = vote_solidity*10, y = prob_vote*100)) +
geom_segment(data = segments,
aes(x = vote_solidity,
xend = vote_solidity,
yend = gam),
y = 0,
color = "darkgrey",
linetype = "dotted",
alpha = 1,
linewidth = 0.35) +
geom_line(stat = "smooth",
method = "gam",
aes(linetype = party,
group = party,
alpha = alpha,
linewidth = alpha),
show.legend = T) +
geom_vline(xintercept = 0, linewidth = 0.4) +
geom_label(data = segments %>% filter(!(vote_solidity%in%c(-8,8,-5,-4))),
aes(x = vote_solidity-0.35,
y = gam + 5,
label = paste0(round(gam), "%")),
fill = "white",
size = 3.5,
label.size = NA,
label.padding = unit(0.05, "lines"),
label.r = unit(0.05, "lines")) +
ylab("Probability of\nvote (%)") +
xlab("RCI of leading party") +
scale_x_continuous(breaks = breaks_x*10) +
scale_y_continuous(expand = c(0,0),
breaks = c(1,25,50,75,99),
labels = c(0,25,50,75,100),
limits = c(0, 107)) +
scale_alpha_continuous(range = c(0.55,1),
guide = "none") +
scale_linewidth_continuous(range = c(0.65,1.75), guide = "none") +
scale_linetype_manual(name = "",
values = c("all" = "solid",
"CAQ" = "dashed",
"PLQ" = "dotdash",
"QS" =  "dotted",
"PQ" =  "longdash",
"PCQ" = "twodash"),
labels = c("all" = "All parties",
"CAQ" = "CAQ",
"PLQ" = "QLP",
"QS" = "QS",
"PQ" = "PQ",
"PCQ" = "PCQ")) +
envalysis::theme_publish() +
theme(axis.ticks = element_blank(),
plot.background = element_rect(fill = "white"),
panel.background = element_rect(fill = "white"))
ggsave("graphs/figure2_prob_voteInt.png",
width = 8, height = 4.5)
ggplot(Graph, aes(x = vote_solidity*10, y = prob_vote*100)) +
geom_segment(data = segments,
aes(x = vote_solidity,
xend = vote_solidity,
yend = gam),
y = 0,
color = "darkgrey",
linetype = "dotted",
alpha = 1,
linewidth = 0.35) +
geom_line(stat = "smooth",
method = "gam",
aes(linetype = party,
group = party,
alpha = alpha,
linewidth = alpha),
show.legend = T) +
geom_vline(xintercept = 0, linewidth = 0.4) +
geom_label(data = segments %>% filter(!(vote_solidity%in%c(-8,8,-5,-4))),
aes(x = vote_solidity-0.35,
y = gam + 5,
label = paste0(round(gam), "%")),
fill = "white",
size = 4,
label.size = NA,
label.padding = unit(0.05, "lines"),
label.r = unit(0.05, "lines")) +
ylab("Probability of\nvote (%)") +
xlab("RCI of leading party") +
scale_x_continuous(breaks = breaks_x*10) +
scale_y_continuous(expand = c(0,0),
breaks = c(1,25,50,75,99),
labels = c(0,25,50,75,100),
limits = c(0, 107)) +
scale_alpha_continuous(range = c(0.55,1),
guide = "none") +
scale_linewidth_continuous(range = c(0.65,1.75), guide = "none") +
scale_linetype_manual(name = "",
values = c("all" = "solid",
"CAQ" = "dashed",
"PLQ" = "dotdash",
"QS" =  "dotted",
"PQ" =  "longdash",
"PCQ" = "twodash"),
labels = c("all" = "All parties",
"CAQ" = "CAQ",
"PLQ" = "QLP",
"QS" = "QS",
"PQ" = "PQ",
"PCQ" = "PCQ")) +
envalysis::theme_publish() +
theme(axis.ticks = element_blank(),
plot.background = element_rect(fill = "white"),
panel.background = element_rect(fill = "white"))
ggsave("graphs/figure2_prob_voteInt.png",
width = 8, height = 4.5)
ggplot(Graph, aes(x = vote_solidity*10, y = prob_vote*100)) +
geom_segment(data = segments,
aes(x = vote_solidity,
xend = vote_solidity,
yend = gam),
y = 0,
color = "darkgrey",
linetype = "dotted",
alpha = 1,
linewidth = 0.35) +
geom_line(stat = "smooth",
method = "gam",
aes(linetype = party,
group = party,
alpha = alpha,
linewidth = alpha),
show.legend = T) +
geom_vline(xintercept = 0, linewidth = 0.4) +
geom_label(data = segments %>% filter(!(vote_solidity%in%c(-8,8,-5,-4))),
aes(x = vote_solidity-0.35,
y = gam + 5.5,
label = paste0(round(gam), "%")),
fill = "white",
size = 4.5,
label.size = NA,
label.padding = unit(0.05, "lines"),
label.r = unit(0.05, "lines")) +
ylab("Probability of\nvote (%)") +
xlab("RCI of leading party") +
scale_x_continuous(breaks = breaks_x*10) +
scale_y_continuous(expand = c(0,0),
breaks = c(1,25,50,75,99),
labels = c(0,25,50,75,100),
limits = c(0, 107)) +
scale_alpha_continuous(range = c(0.55,1),
guide = "none") +
scale_linewidth_continuous(range = c(0.65,1.75), guide = "none") +
scale_linetype_manual(name = "",
values = c("all" = "solid",
"CAQ" = "dashed",
"PLQ" = "dotdash",
"QS" =  "dotted",
"PQ" =  "longdash",
"PCQ" = "twodash"),
labels = c("all" = "All parties",
"CAQ" = "CAQ",
"PLQ" = "QLP",
"QS" = "QS",
"PQ" = "PQ",
"PCQ" = "PCQ")) +
envalysis::theme_publish() +
theme(axis.ticks = element_blank(),
plot.background = element_rect(fill = "white"),
panel.background = element_rect(fill = "white"))
ggsave("graphs/figure2_prob_voteInt.png",
width = 8, height = 4.5)
ggplot(Graph, aes(x = vote_solidity*10, y = prob_vote*100)) +
geom_segment(data = segments,
aes(x = vote_solidity,
xend = vote_solidity,
yend = gam),
y = 0,
color = "darkgrey",
linetype = "dotted",
alpha = 1,
linewidth = 0.35) +
geom_line(stat = "smooth",
method = "gam",
aes(linetype = party,
group = party,
alpha = alpha,
linewidth = alpha),
show.legend = T) +
geom_vline(xintercept = 0, linewidth = 0.4) +
geom_label(data = segments %>% filter(!(vote_solidity%in%c(-8,8,-5,-4))),
aes(x = vote_solidity-0.35,
y = gam + 6.5,
label = paste0(round(gam), "%")),
fill = "white",
size = 4.5,
label.size = NA,
label.padding = unit(0.05, "lines"),
label.r = unit(0.05, "lines")) +
ylab("Probability of\nvote (%)") +
xlab("RCI of leading party") +
scale_x_continuous(breaks = breaks_x*10) +
scale_y_continuous(expand = c(0,0),
breaks = c(1,25,50,75,99),
labels = c(0,25,50,75,100),
limits = c(0, 107)) +
scale_alpha_continuous(range = c(0.55,1),
guide = "none") +
scale_linewidth_continuous(range = c(0.65,1.75), guide = "none") +
scale_linetype_manual(name = "",
values = c("all" = "solid",
"CAQ" = "dashed",
"PLQ" = "dotdash",
"QS" =  "dotted",
"PQ" =  "longdash",
"PCQ" = "twodash"),
labels = c("all" = "All parties",
"CAQ" = "CAQ",
"PLQ" = "QLP",
"QS" = "QS",
"PQ" = "PQ",
"PCQ" = "PCQ")) +
envalysis::theme_publish() +
theme(axis.ticks = element_blank(),
plot.background = element_rect(fill = "white"),
panel.background = element_rect(fill = "white"))
ggsave("graphs/figure2_prob_voteInt.png",
width = 8, height = 4.5)
ggplot(Graph, aes(x = vote_solidity*10, y = prob_vote*100)) +
geom_segment(data = segments,
aes(x = vote_solidity,
xend = vote_solidity,
yend = gam),
y = 0,
color = "darkgrey",
linetype = "dotted",
alpha = 1,
linewidth = 0.35) +
geom_line(stat = "smooth",
method = "gam",
aes(linetype = party,
group = party,
alpha = alpha,
linewidth = alpha),
show.legend = T) +
geom_vline(xintercept = 0, linewidth = 0.4) +
geom_label(data = segments %>% filter(!(vote_solidity%in%c(-8,8,-5,-4))),
aes(x = vote_solidity-0.35,
y = gam + 6.75,
label = paste0(round(gam), "%")),
fill = "white",
size = 4.5,
label.size = NA,
label.padding = unit(0.05, "lines"),
label.r = unit(0.05, "lines")) +
ylab("Probability of\nvote (%)") +
xlab("RCI of leading party") +
scale_x_continuous(breaks = breaks_x*10) +
scale_y_continuous(expand = c(0,0),
breaks = c(1,25,50,75,99),
labels = c(0,25,50,75,100),
limits = c(0, 107)) +
scale_alpha_continuous(range = c(0.55,1),
guide = "none") +
scale_linewidth_continuous(range = c(0.65,1.75), guide = "none") +
scale_linetype_manual(name = "",
values = c("all" = "solid",
"CAQ" = "dashed",
"PLQ" = "dotdash",
"QS" =  "dotted",
"PQ" =  "longdash",
"PCQ" = "twodash"),
labels = c("all" = "All parties",
"CAQ" = "CAQ",
"PLQ" = "QLP",
"QS" = "QS",
"PQ" = "PQ",
"PCQ" = "PCQ")) +
envalysis::theme_publish() +
theme(axis.ticks = element_blank(),
plot.background = element_rect(fill = "white"),
panel.background = element_rect(fill = "white"))
ggsave("graphs/figure2_prob_voteInt.png",
width = 8, height = 4.5)
ggplot(Graph, aes(x = vote_solidity*10, y = prob_vote*100)) +
geom_segment(data = segments,
aes(x = vote_solidity,
xend = vote_solidity,
yend = gam),
y = 0,
color = "darkgrey",
linetype = "dotted",
alpha = 1,
linewidth = 0.35) +
geom_line(stat = "smooth",
method = "gam",
aes(linetype = party,
group = party,
alpha = alpha,
linewidth = alpha),
show.legend = T) +
geom_vline(xintercept = 0, linewidth = 0.4) +
geom_label(data = segments %>% filter(!(vote_solidity%in%c(-8,8,-5,-4))),
aes(x = vote_solidity-0.35,
y = gam + 6.75,
label = paste0(round(gam), "%")),
fill = "white",
size = 4.5,
label.size = NA,
label.padding = unit(0.05, "lines"),
label.r = unit(0.05, "lines")) +
ylab("Probability of\nvote (%)") +
xlab("RCI of leading party") +
scale_x_continuous(breaks = breaks_x*10) +
scale_y_continuous(expand = c(0,0),
breaks = c(1,25,50,75,99),
labels = c(0,25,50,75,100),
limits = c(0, 107)) +
scale_alpha_continuous(range = c(0.55,1),
guide = "none") +
scale_linewidth_continuous(range = c(0.45,1.75), guide = "none") +
scale_linetype_manual(name = "",
values = c("all" = "solid",
"CAQ" = "dashed",
"PLQ" = "dotdash",
"QS" =  "dotted",
"PQ" =  "longdash",
"PCQ" = "twodash"),
labels = c("all" = "All parties",
"CAQ" = "CAQ",
"PLQ" = "QLP",
"QS" = "QS",
"PQ" = "PQ",
"PCQ" = "PCQ")) +
envalysis::theme_publish() +
theme(axis.ticks = element_blank(),
plot.background = element_rect(fill = "white"),
panel.background = element_rect(fill = "white"))
ggsave("graphs/figure2_prob_voteInt.png",
width = 8, height = 4.5)
library(tidyverse)
library(stargazer)
# Data --------------------------------------------------------------------
Volatility <- readRDS("data/table3_aggregatedData.rds") %>%
select(riding_id, volatility, fragility_index)
Data <- readRDS("mrp/data/census_data.rds") %>%
select(riding_id, starts_with("age"), french,
starts_with("income"), starts_with("educ"),
starts_with("vote2018")) %>%
left_join(Volatility, ., by = "riding_id") %>%
select(-riding_id) %>%
mutate(high_educ = educColl + educUniv,
age60p = age60m74 + age75p)
hist(Data$age60p)
View(Data)
names(Data)
modelCAQ <- lm(volatility ~ fragility_index + educColl + educUniv +
income100p + age15m29 + age30m44 + age60p + vote2018_CAQ,
data = Data)
summary(modelCAQ)
modelPLQ <- lm(volatility ~ fragility_index + educColl + educUniv +
income100p + age15m29 + age30m44 + age60p + vote2018_PLQ,
data = Data)
summary(modelPLQ)
modelQS <- lm(volatility ~ fragility_index + educColl + educUniv +
income100p + age15m29 + age30m44 + age60p + vote2018_QS,
data = Data)
summary(modelQS)
modelPQ <- lm(volatility ~ fragility_index + educColl + educUniv +
income100p + age15m29 + age30m44 + age60p + vote2018_PQ,
data = Data)
summary(modelPQ)
modelAll <- lm(
volatility ~ fragility_index + educColl + educUniv +
income100p + age15m29 + age30m44 + age60p +
vote2018_CAQ +
vote2018_PLQ +
vote2018_QS +
vote2018_PQ,
data = Data
)
summary(modelAll)
stargazer(modelCAQ, modelPLQ, modelQS, modelPQ,
modelAll,
header = F,
single.row = T,
column.sep.width = "1pt",
no.space = F,
type = "latex",
digits = 2,
keep.stat = c("rsq"),
float.env = "sidewaystable",
covariate.labels = c("Fragility index",
"Collegial education",
"University education",
"\\parbox{3cm}{Income above\\\\100,000\\$}",
"Age 15-29",
"Age 30-44",
"Age 60+",
"\\parbox{3cm}{2018 vote share\\\\CAQ}",
"\\parbox{3cm}{2018 vote share\\\\PLQ}",
"\\parbox{3cm}{2018 vote share\\\\QS}",
"\\parbox{3cm}{2018 vote share\\\\PQ}"),
dep.var.labels = c("Campaign volatility"),
notes = c("N = 125", "Source: Quebec census data and 8 monthly surveys from January to August (n = 9135)"),
notes.align = "l",
notes.append = T,
notes.label = "")
stargazer(modelCAQ, modelPLQ, modelQS, modelPQ,
modelAll,
header = F,
single.row = T,
column.sep.width = "1pt",
no.space = F,
type = "latex",
digits = 2,
keep.stat = c("rsq"),
#float.env = "sidewaystable",
covariate.labels = c("Fragility index",
"Collegial education",
"University education",
"\\parbox{3cm}{Income above\\\\100,000\\$}",
"Age 15-29",
"Age 30-44",
"Age 60+",
"\\parbox{3cm}{2018 vote share\\\\CAQ}",
"\\parbox{3cm}{2018 vote share\\\\PLQ}",
"\\parbox{3cm}{2018 vote share\\\\QS}",
"\\parbox{3cm}{2018 vote share\\\\PQ}"),
dep.var.labels = c("Campaign volatility"),
notes = c("N = 125", "Source: Quebec census data and 8 monthly surveys from January to August (n = 9135)"),
notes.align = "l",
notes.append = T,
notes.label = "")
stargazer(modelCAQ, modelPLQ, modelQS, modelPQ,
modelAll,
header = F,
label = "table_reg",
single.row = T,
column.sep.width = "1pt",
no.space = F,
type = "latex",
digits = 2,
keep.stat = c("rsq"),
#float.env = "sidewaystable",
covariate.labels = c("Fragility index",
"Collegial education",
"University education",
"\\parbox{3cm}{Income above\\\\100,000\\$}",
"Age 15-29",
"Age 30-44",
"Age 60+",
"\\parbox{3cm}{2018 vote share\\\\CAQ}",
"\\parbox{3cm}{2018 vote share\\\\PLQ}",
"\\parbox{3cm}{2018 vote share\\\\QS}",
"\\parbox{3cm}{2018 vote share\\\\PQ}"),
dep.var.labels = c("Campaign volatility"),
notes = c("N = 125", "Source: Quebec census data and 8 monthly surveys from January to August (n = 9135)"),
notes.align = "l",
notes.append = T,
notes.label = "")
stargazer(modelCAQ, modelPLQ, modelQS, modelPQ,
modelAll,
header = F,
label = "table_reg",
single.row = F,
column.sep.width = "1pt",
no.space = F,
type = "latex",
digits = 2,
keep.stat = c("rsq"),
#float.env = "sidewaystable",
covariate.labels = c("Fragility index",
"Collegial education",
"University education",
"\\parbox{3cm}{Income above\\\\100,000\\$}",
"Age 15-29",
"Age 30-44",
"Age 60+",
"\\parbox{3cm}{2018 vote share\\\\CAQ}",
"\\parbox{3cm}{2018 vote share\\\\PLQ}",
"\\parbox{3cm}{2018 vote share\\\\QS}",
"\\parbox{3cm}{2018 vote share\\\\PQ}"),
dep.var.labels = c("Campaign volatility"),
notes = c("N = 125", "Source: Quebec census data and 8 monthly surveys from January to August (n = 9135)"),
notes.align = "l",
notes.append = T,
notes.label = "")
