geom_text(x = 1.0875, y = 0.43, label = paste0("r = ", round(cor, 2)),
color = "#454545", size = 4.5) +
theme_publish() +
theme(axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.line.x = element_blank(),
axis.line.y = element_blank(),
axis.title.x = element_markdown(size = 20, hjust = 0.5),
axis.title.y = element_markdown(size = 20, hjust = 0.5),
axis.text = element_text(size = 12),
plot.background = element_rect(fill = "white"),
panel.background = element_rect(fill = "white"))
ggsave("graphs/figure4_fragilityVSvolatility.png",
width = 7, height = 7)
Data$alpha <- log(scale(Data$n_riding, center = T)[,1])
Data$alpha <- scale(Data$n_riding, center = T)[,1]
hist(Data$alpha)
Data$alpha <- scale(Data$n_riding, center = F)[,1]
hist(Data$alpha)
Data$alpha <- log(scale(Data$n_riding, center = F)[,1]+0.000000001)
hist(Data$alpha)
ggplot(Data, aes(x = fragility_index_mrp, y = volatility)) +
xlab("<br>Fragility index<br>(before campaign)") +
ylab("<br>Campaign volatility<br>") +
geom_vline(xintercept = 0.5, linewidth = 0.3) +
geom_hline(yintercept = 0.5, linewidth = 0.3) +
geom_text(x = 0, y = 1, label = "Q1", size = 25, color = "grey") +
geom_text(x = 1, y = 1, label = "Q2", size = 25, color = "grey") +
geom_text(x = 0, y = 0, label = "Q3", size = 25, color = "grey") +
geom_text(x = 1, y = 0, label = "Q4", size = 25, color = "grey") +
geom_smooth(method = "lm", se = F,
linewidth = 0.5, linetype = "dashed",
color = "black") +
geom_jitter(size = 4, shape = 21, color = "black",
fill = "darkgrey",
## control for alpha for number of respondents in riding
aes(alpha = alpha)) +
scale_alpha_continuous(name = "Number of respondents", range = c(0,1)) +
scale_y_continuous(limits = c(-0.12, 1.12),
breaks = c(0, 0.5, 1)) +
scale_x_continuous(limits = c(-0.12, 1.12),
breaks = c(0, 0.5, 1)) +
geom_text(x = 1.0875, y = 0.43, label = paste0("r = ", round(cor, 2)),
color = "#454545", size = 4.5) +
theme_publish() +
theme(axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.line.x = element_blank(),
axis.line.y = element_blank(),
axis.title.x = element_markdown(size = 20, hjust = 0.5),
axis.title.y = element_markdown(size = 20, hjust = 0.5),
axis.text = element_text(size = 12),
plot.background = element_rect(fill = "white"),
panel.background = element_rect(fill = "white"))
ggplot(Data, aes(x = fragility_index_mrp, y = volatility)) +
xlab("<br>Fragility index<br>(before campaign)") +
ylab("<br>Campaign volatility<br>") +
geom_vline(xintercept = 0.5, linewidth = 0.3) +
geom_hline(yintercept = 0.5, linewidth = 0.3) +
geom_text(x = 0, y = 1, label = "Q1", size = 25, color = "grey") +
geom_text(x = 1, y = 1, label = "Q2", size = 25, color = "grey") +
geom_text(x = 0, y = 0, label = "Q3", size = 25, color = "grey") +
geom_text(x = 1, y = 0, label = "Q4", size = 25, color = "grey") +
geom_smooth(method = "lm", se = F,
linewidth = 0.5, linetype = "dashed",
color = "black") +
geom_jitter(size = 4, shape = 21, color = "black",
fill = "#4C4C4C",
## control for alpha for number of respondents in riding
aes(alpha = alpha)) +
scale_alpha_continuous(name = "Number of respondents", range = c(0,1)) +
scale_y_continuous(limits = c(-0.12, 1.12),
breaks = c(0, 0.5, 1)) +
scale_x_continuous(limits = c(-0.12, 1.12),
breaks = c(0, 0.5, 1)) +
geom_text(x = 1.0875, y = 0.43, label = paste0("r = ", round(cor, 2)),
color = "#454545", size = 4.5) +
theme_publish() +
theme(axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.line.x = element_blank(),
axis.line.y = element_blank(),
axis.title.x = element_markdown(size = 20, hjust = 0.5),
axis.title.y = element_markdown(size = 20, hjust = 0.5),
axis.text = element_text(size = 12),
plot.background = element_rect(fill = "white"),
panel.background = element_rect(fill = "white"))
ggsave("graphs/figure4_fragilityVSvolatility.png",
width = 7, height = 7)
ggplot(Data, aes(x = fragility_index_mrp, y = volatility)) +
xlab("<br>Fragility index<br>(before campaign)") +
ylab("<br>Campaign volatility<br>") +
geom_vline(xintercept = 0.5, linewidth = 0.3) +
geom_hline(yintercept = 0.5, linewidth = 0.3) +
geom_text(x = 0, y = 1, label = "Q1", size = 25, color = "grey") +
geom_text(x = 1, y = 1, label = "Q2", size = 25, color = "grey") +
geom_text(x = 0, y = 0, label = "Q3", size = 25, color = "grey") +
geom_text(x = 1, y = 0, label = "Q4", size = 25, color = "grey") +
geom_smooth(method = "lm", se = F,
linewidth = 0.5, linetype = "dashed",
color = "black") +
geom_jitter(size = 4, shape = 21, color = "black",
fill = "#565656",
## control for alpha for number of respondents in riding
aes(alpha = alpha)) +
scale_alpha_continuous(name = "Number of respondents", range = c(0,1)) +
scale_y_continuous(limits = c(-0.12, 1.12),
breaks = c(0, 0.5, 1)) +
scale_x_continuous(limits = c(-0.12, 1.12),
breaks = c(0, 0.5, 1)) +
geom_text(x = 1.0875, y = 0.43, label = paste0("r = ", round(cor, 2)),
color = "#454545", size = 4.5) +
theme_publish() +
theme(axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.line.x = element_blank(),
axis.line.y = element_blank(),
axis.title.x = element_markdown(size = 20, hjust = 0.5),
axis.title.y = element_markdown(size = 20, hjust = 0.5),
axis.text = element_text(size = 12),
plot.background = element_rect(fill = "white"),
panel.background = element_rect(fill = "white"))
## For visualisation purposes, transform the `n_riding` variable, which will
## be our `alpha` parameter
Data$alpha <- log(scale(Data$n_riding, center = F)[,1]+0.000000001)
hist(Data$alpha)
ggplot(Data, aes(x = n_riding, y = alpha)) +
geom_jitter()
ggplot(Data, aes(x = n_riding, y = alpha)) +
geom_jitter() +
geom_smooth()
test <- loess(n_riding ~ alpha)
test <- loess(n_riding ~ alpha,
data = Data)
predict(test, alpha = -1)
predict(test, data.frame(alpha = -1))
predict(test, data.frame(alpha = 0))
predict(test, data.frame(alpha = 2))
predict(test, data.frame(alpha = 1))
predict(test, data.frame(alpha = 0.5))
## Create a loess model for the alpha scale labels
loess_alpha <- loess(n_riding ~ alpha,
data = Data)
predict(object = loess_alpha, newdata = data.frame(alpha = c(-2, -1, 0, 1)))
ggplot(Data, aes(x = fragility_index_mrp, y = volatility)) +
xlab("<br>Fragility index<br>(before campaign)") +
ylab("<br>Campaign volatility<br>") +
geom_vline(xintercept = 0.5, linewidth = 0.3) +
geom_hline(yintercept = 0.5, linewidth = 0.3) +
geom_text(x = 0, y = 1, label = "Q1", size = 25, color = "grey") +
geom_text(x = 1, y = 1, label = "Q2", size = 25, color = "grey") +
geom_text(x = 0, y = 0, label = "Q3", size = 25, color = "grey") +
geom_text(x = 1, y = 0, label = "Q4", size = 25, color = "grey") +
geom_smooth(method = "lm", se = F,
linewidth = 0.5, linetype = "dashed",
color = "black") +
geom_jitter(size = 4, shape = 21, color = "black",
fill = "#565656",
## control for alpha for number of respondents in riding
aes(alpha = alpha)) +
scale_alpha_continuous(
name = "Number of respondents",
range = c(0, 1),
breaks = c(-2, -1, 0, 1),
predict(object = loess_alpha,
newdata = data.frame(alpha = c(-2,-1, 0, 1)))) +
scale_y_continuous(limits = c(-0.12, 1.12),
breaks = c(0, 0.5, 1)) +
scale_x_continuous(limits = c(-0.12, 1.12),
breaks = c(0, 0.5, 1)) +
geom_text(x = 1.0875, y = 0.43, label = paste0("r = ", round(cor, 2)),
color = "#454545", size = 4.5) +
theme_publish() +
theme(axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.line.x = element_blank(),
axis.line.y = element_blank(),
axis.title.x = element_markdown(size = 20, hjust = 0.5),
axis.title.y = element_markdown(size = 20, hjust = 0.5),
axis.text = element_text(size = 12),
plot.background = element_rect(fill = "white"),
panel.background = element_rect(fill = "white"))
ggplot(Data, aes(x = fragility_index_mrp, y = volatility)) +
xlab("<br>Fragility index<br>(before campaign)") +
ylab("<br>Campaign volatility<br>") +
geom_vline(xintercept = 0.5, linewidth = 0.3) +
geom_hline(yintercept = 0.5, linewidth = 0.3) +
geom_text(x = 0, y = 1, label = "Q1", size = 25, color = "grey") +
geom_text(x = 1, y = 1, label = "Q2", size = 25, color = "grey") +
geom_text(x = 0, y = 0, label = "Q3", size = 25, color = "grey") +
geom_text(x = 1, y = 0, label = "Q4", size = 25, color = "grey") +
geom_smooth(method = "lm", se = F,
linewidth = 0.5, linetype = "dashed",
color = "black") +
geom_jitter(size = 4, shape = 21, color = "black",
fill = "#565656",
## control for alpha for number of respondents in riding
aes(alpha = alpha)) +
scale_alpha_continuous(
name = "Number of respondents",
range = c(0, 1),
breaks = c(-2, -1, 0, 1),
round(predict(object = loess_alpha,
newdata = data.frame(alpha = c(-2,-1, 0, 1))))) +
scale_y_continuous(limits = c(-0.12, 1.12),
breaks = c(0, 0.5, 1)) +
scale_x_continuous(limits = c(-0.12, 1.12),
breaks = c(0, 0.5, 1)) +
geom_text(x = 1.0875, y = 0.43, label = paste0("r = ", round(cor, 2)),
color = "#454545", size = 4.5) +
theme_publish() +
theme(axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.line.x = element_blank(),
axis.line.y = element_blank(),
axis.title.x = element_markdown(size = 20, hjust = 0.5),
axis.title.y = element_markdown(size = 20, hjust = 0.5),
axis.text = element_text(size = 12),
plot.background = element_rect(fill = "white"),
panel.background = element_rect(fill = "white"))
ggplot(Data, aes(x = fragility_index_mrp, y = volatility)) +
xlab("<br>Fragility index<br>(before campaign)") +
ylab("<br>Campaign volatility<br>") +
geom_vline(xintercept = 0.5, linewidth = 0.3) +
geom_hline(yintercept = 0.5, linewidth = 0.3) +
geom_text(x = 0, y = 1, label = "Q1", size = 25, color = "grey") +
geom_text(x = 1, y = 1, label = "Q2", size = 25, color = "grey") +
geom_text(x = 0, y = 0, label = "Q3", size = 25, color = "grey") +
geom_text(x = 1, y = 0, label = "Q4", size = 25, color = "grey") +
geom_smooth(method = "lm", se = F,
linewidth = 0.5, linetype = "dashed",
color = "black") +
geom_jitter(size = 4, shape = 21, color = "black",
fill = "#565656",
## control for alpha for number of respondents in riding
aes(alpha = alpha)) +
scale_alpha_continuous(
name = "Number of respondents",
range = c(0, 1),
breaks = c(-2,-1, 0, 1),
labels = round(predict(
object = loess_alpha,
newdata = data.frame(alpha = c(-2, -1, 0, 1))
))
) +
scale_y_continuous(limits = c(-0.12, 1.12),
breaks = c(0, 0.5, 1)) +
scale_x_continuous(limits = c(-0.12, 1.12),
breaks = c(0, 0.5, 1)) +
geom_text(x = 1.0875, y = 0.43, label = paste0("r = ", round(cor, 2)),
color = "#454545", size = 4.5) +
theme_publish() +
theme(axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.line.x = element_blank(),
axis.line.y = element_blank(),
axis.title.x = element_markdown(size = 20, hjust = 0.5),
axis.title.y = element_markdown(size = 20, hjust = 0.5),
axis.text = element_text(size = 12),
plot.background = element_rect(fill = "white"),
panel.background = element_rect(fill = "white"))
## Create a loess model for the alpha scale breaks
loess_alpha <- loess(alpha ~ n_riding,
data = Data)
hist(Data$n_riding)
ggplot(Data, aes(x = fragility_index_mrp, y = volatility)) +
xlab("<br>Fragility index<br>(before campaign)") +
ylab("<br>Campaign volatility<br>") +
geom_vline(xintercept = 0.5, linewidth = 0.3) +
geom_hline(yintercept = 0.5, linewidth = 0.3) +
geom_text(x = 0, y = 1, label = "Q1", size = 25, color = "grey") +
geom_text(x = 1, y = 1, label = "Q2", size = 25, color = "grey") +
geom_text(x = 0, y = 0, label = "Q3", size = 25, color = "grey") +
geom_text(x = 1, y = 0, label = "Q4", size = 25, color = "grey") +
geom_smooth(method = "lm", se = F,
linewidth = 0.5, linetype = "dashed",
color = "black") +
geom_jitter(size = 4, shape = 21, color = "black",
fill = "#565656",
## control for alpha for number of respondents in riding
aes(alpha = alpha)) +
scale_alpha_continuous(
name = "Number of respondents",
range = c(0, 1),
labels = c(0, 50, 100, 150, 200),
breaks = round(predict(
object = loess_alpha,
newdata = data.frame(alpha = c(0, 50, 100, 150, 200))
))
) +
scale_y_continuous(limits = c(-0.12, 1.12),
breaks = c(0, 0.5, 1)) +
scale_x_continuous(limits = c(-0.12, 1.12),
breaks = c(0, 0.5, 1)) +
geom_text(x = 1.0875, y = 0.43, label = paste0("r = ", round(cor, 2)),
color = "#454545", size = 4.5) +
theme_publish() +
theme(axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.line.x = element_blank(),
axis.line.y = element_blank(),
axis.title.x = element_markdown(size = 20, hjust = 0.5),
axis.title.y = element_markdown(size = 20, hjust = 0.5),
axis.text = element_text(size = 12),
plot.background = element_rect(fill = "white"),
panel.background = element_rect(fill = "white"))
ggplot(Data, aes(x = fragility_index_mrp, y = volatility)) +
xlab("<br>Fragility index<br>(before campaign)") +
ylab("<br>Campaign volatility<br>") +
geom_vline(xintercept = 0.5, linewidth = 0.3) +
geom_hline(yintercept = 0.5, linewidth = 0.3) +
geom_text(x = 0, y = 1, label = "Q1", size = 25, color = "grey") +
geom_text(x = 1, y = 1, label = "Q2", size = 25, color = "grey") +
geom_text(x = 0, y = 0, label = "Q3", size = 25, color = "grey") +
geom_text(x = 1, y = 0, label = "Q4", size = 25, color = "grey") +
geom_smooth(method = "lm", se = F,
linewidth = 0.5, linetype = "dashed",
color = "black") +
geom_jitter(size = 4, shape = 21, color = "black",
fill = "#565656",
## control for alpha for number of respondents in riding
aes(alpha = alpha)) +
scale_alpha_continuous(
name = "Number of respondents",
range = c(0, 1),
labels = c(0, 50, 100, 150, 200),
breaks = round(predict(
object = loess_alpha,
newdata = data.frame(n_riding = c(0, 50, 100, 150, 200))
))
) +
scale_y_continuous(limits = c(-0.12, 1.12),
breaks = c(0, 0.5, 1)) +
scale_x_continuous(limits = c(-0.12, 1.12),
breaks = c(0, 0.5, 1)) +
geom_text(x = 1.0875, y = 0.43, label = paste0("r = ", round(cor, 2)),
color = "#454545", size = 4.5) +
theme_publish() +
theme(axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.line.x = element_blank(),
axis.line.y = element_blank(),
axis.title.x = element_markdown(size = 20, hjust = 0.5),
axis.title.y = element_markdown(size = 20, hjust = 0.5),
axis.text = element_text(size = 12),
plot.background = element_rect(fill = "white"),
panel.background = element_rect(fill = "white"))
ggsave("graphs/figure4_fragilityVSvolatility.png",
width = 7, height = 7)
ggplot(Data, aes(x = fragility_index_mrp, y = volatility)) +
xlab("<br>Fragility index<br>(before campaign)") +
ylab("<br>Campaign volatility<br>") +
geom_vline(xintercept = 0.5, linewidth = 0.3) +
geom_hline(yintercept = 0.5, linewidth = 0.3) +
geom_text(x = 0, y = 1, label = "Q1", size = 25, color = "grey") +
geom_text(x = 1, y = 1, label = "Q2", size = 25, color = "grey") +
geom_text(x = 0, y = 0, label = "Q3", size = 25, color = "grey") +
geom_text(x = 1, y = 0, label = "Q4", size = 25, color = "grey") +
geom_smooth(method = "lm", se = F,
linewidth = 0.5, linetype = "dashed",
color = "black") +
geom_jitter(size = 4, shape = 21, color = "black",
fill = "#565656",
## control for alpha for number of respondents in riding
aes(alpha = alpha)) +
scale_alpha_continuous(
name = "Number of respondents",
range = c(0, 1),
labels = c(0, 50, 100, 150, 200),
breaks = round(predict(
object = loess_alpha,
newdata = data.frame(n_riding = c(5, 50, 100, 150, 200))
))
) +
scale_y_continuous(limits = c(-0.12, 1.12),
breaks = c(0, 0.5, 1)) +
scale_x_continuous(limits = c(-0.12, 1.12),
breaks = c(0, 0.5, 1)) +
geom_text(x = 1.0875, y = 0.43, label = paste0("r = ", round(cor, 2)),
color = "#454545", size = 4.5) +
theme_publish() +
theme(axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.line.x = element_blank(),
axis.line.y = element_blank(),
axis.title.x = element_markdown(size = 20, hjust = 0.5),
axis.title.y = element_markdown(size = 20, hjust = 0.5),
axis.text = element_text(size = 12),
plot.background = element_rect(fill = "white"),
panel.background = element_rect(fill = "white"))
ggsave("graphs/figure4_fragilityVSvolatility.png",
width = 7, height = 7)
ggplot(Data, aes(x = fragility_index_mrp, y = volatility)) +
xlab("<br>Fragility index with MRP<br>(before campaign)") +
ylab("<br>Campaign volatility<br>") +
geom_vline(xintercept = 0.5, linewidth = 0.3) +
geom_hline(yintercept = 0.5, linewidth = 0.3) +
geom_text(x = 0, y = 1, label = "Q1", size = 25, color = "grey") +
geom_text(x = 1, y = 1, label = "Q2", size = 25, color = "grey") +
geom_text(x = 0, y = 0, label = "Q3", size = 25, color = "grey") +
geom_text(x = 1, y = 0, label = "Q4", size = 25, color = "grey") +
geom_smooth(method = "lm", se = F,
linewidth = 0.5, linetype = "dashed",
color = "black") +
geom_jitter(size = 4, shape = 21, color = "black",
fill = "#565656",
## control for alpha for number of respondents in riding
aes(alpha = alpha)) +
scale_alpha_continuous(
name = "Number of respondents",
range = c(0, 1),
labels = c(0, 50, 100, 150, 200),
breaks = round(predict(
object = loess_alpha,
newdata = data.frame(n_riding = c(5, 50, 100, 150, 200))
))
) +
scale_y_continuous(limits = c(-0.12, 1.12),
breaks = c(0, 0.5, 1)) +
scale_x_continuous(limits = c(-0.12, 1.12),
breaks = c(0, 0.5, 1)) +
geom_text(x = 1.0875, y = 0.43, label = paste0("r = ", round(cor, 2)),
color = "#454545", size = 4.5) +
theme_publish() +
theme(axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.line.x = element_blank(),
axis.line.y = element_blank(),
axis.title.x = element_markdown(size = 20, hjust = 0.5),
axis.title.y = element_markdown(size = 20, hjust = 0.5),
axis.text = element_text(size = 12),
plot.background = element_rect(fill = "white"),
panel.background = element_rect(fill = "white"))
ggsave("graphs/figure4_fragilityVSvolatility.png",
width = 7, height = 7)
ggplot(Data, aes(x = fragility_index_mrp, y = volatility)) +
xlab("<br>Fragility index with MRP<br>(before campaign)") +
ylab("<br>Campaign volatility<br>") +
geom_vline(xintercept = 0.5, linewidth = 0.3) +
geom_hline(yintercept = 0.5, linewidth = 0.3) +
geom_text(x = 0, y = 1, label = "Q1", size = 25, color = "grey") +
geom_text(x = 1, y = 1, label = "Q2", size = 25, color = "grey") +
geom_text(x = 0, y = 0, label = "Q3", size = 25, color = "grey") +
geom_text(x = 1, y = 0, label = "Q4", size = 25, color = "grey") +
geom_smooth(method = "lm", se = F,
linewidth = 0.5, linetype = "dashed",
color = "black") +
geom_jitter(size = 4, shape = 21, color = "black",
fill = "#565656",
## control for alpha for number of respondents in riding
aes(alpha = alpha)) +
scale_alpha_continuous(
name = "Number of respondents",
range = c(0, 1),
labels = c(0, 50, 100, 150, 200),
breaks = round(predict(
object = loess_alpha,
newdata = data.frame(n_riding = c(5, 50, 100, 150, 200))
))
) +
scale_y_continuous(limits = c(-0.12, 1.12),
breaks = c(0, 0.5, 1)) +
scale_x_continuous(limits = c(-0.12, 1.12),
breaks = c(0, 0.5, 1)) +
geom_text(x = 1.0875, y = 0.43, label = paste0("r = ", round(cor, 2)),
color = "#454545", size = 4.5) +
theme_publish() +
theme(axis.ticks.x = element_blank(),
axis.ticks.y = element_blank(),
axis.line.x = element_blank(),
axis.line.y = element_blank(),
axis.title.x = element_markdown(size = 20, hjust = 0.5, lineheight = 1.6),
axis.title.y = element_markdown(size = 20, hjust = 0.5),
axis.text = element_text(size = 12),
plot.background = element_rect(fill = "white"),
panel.background = element_rect(fill = "white"))
ggsave("graphs/figure4_fragilityVSvolatility.png",
width = 7, height = 7)
# Packages ----------------------------------------------------------------
library(tidyverse)
# Data -------------------------------------------------------------------
Data <- readRDS("data/table3_aggregatedData.rds")
str(Data)
Data <- Data %>%
mutate(
# If fragility_index_mrp is > than 0.5, fragile will
# take a value of 1. If not, it will take a value of 0.
fragile = ifelse(fragility_index_mrp >= 0.5, 1, 0),
# Same thing with campaign volatility
volatile = ifelse(volatility >= 0.5, 1, 0))
## Quick cross-tabulation to explore the data
descr::crosstab(Data$volatile, Data$fragile)
crosstab <- descr::crosstab(Data$volatile, Data$fragile,
expected=T, #Add expected frequency to each cell
prop.chisq = T, #Total contribution of each cell
chisq = T) #Results of the chi-squared test will be printed
crosstab
crosstab
## Save tab into a variable to use the number of rows and columns later
tab <- crosstab$tab
# degrees of freedom: (n_rows - 1)(n_cols - 1)
dfr <- (nrow(tab)-1)*(ncol(tab)-1) ## 1 degree of freedom
# Critical value of chi-square, p=.05, df=1
cv05 <- qchisq(.05, dfr, lower.tail=F)
cv05
# Critical value of chi-square, p=.01, df=1
cv01 <- qchisq(.01, dfr, lower.tail=F)
cv01
# Critical value of chi-square, p=.1, df=1
cv1 <- qchisq(.1, dfr, lower.tail=F)
cv1
chisq.test(Data$volatile, Data$fragile)
